---
// Projects gallery with interactive animations
const projects = [
	{
		title: "E-Commerce Platform",
		description: "A full-stack e-commerce solution with payment integration, user authentication, and admin dashboard.",
		technologies: ["React", "Node.js", "MongoDB", "Stripe"],
		image: "/api/placeholder/400/250",
		liveUrl: "#",
		githubUrl: "#",
		category: "Full Stack"
	},
	{
		title: "Task Management App",
		description: "A collaborative task management application with real-time updates and team features.",
		technologies: ["Vue.js", "Firebase", "Tailwind CSS"],
		image: "/api/placeholder/400/250",
		liveUrl: "#",
		githubUrl: "#",
		category: "Frontend"
	},
	{
		title: "Weather Dashboard",
		description: "A weather application with location-based forecasts and interactive maps.",
		technologies: ["JavaScript", "OpenWeather API", "Chart.js"],
		image: "/api/placeholder/400/250",
		liveUrl: "#",
		githubUrl: "#",
		category: "Frontend"
	},
	{
		title: "Blog Platform",
		description: "A modern blog platform with markdown support, SEO optimization, and analytics.",
		technologies: ["Next.js", "PostgreSQL", "Prisma"],
		image: "/api/placeholder/400/250",
		liveUrl: "#",
		githubUrl: "#",
		category: "Full Stack"
	},
	{
		title: "Portfolio Website",
		description: "A responsive portfolio website with animations and modern design.",
		technologies: ["Astro", "React", "Tailwind CSS"],
		image: "/api/placeholder/400/250",
		liveUrl: "#",
		githubUrl: "#",
		category: "Frontend"
	},
	{
		title: "API Gateway",
		description: "A microservices API gateway with authentication, rate limiting, and monitoring.",
		technologies: ["Node.js", "Express", "Redis", "Docker"],
		image: "/api/placeholder/400/250",
		liveUrl: "#",
		githubUrl: "#",
		category: "Backend"
	}
];

const categories = ["All", "Frontend", "Backend", "Full Stack"];
---

<section class="min-h-screen bg-gray-50 dark:bg-slate-900 pt-24 pb-16">
	<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
		<!-- Section Header -->
		<div class="text-center mb-16 animate-fade-in-up">
			<h1 class="text-4xl md:text-5xl font-bold text-gray-900 dark:text-white mb-4">My Projects</h1>
			<div class="w-24 h-1 bg-blue-600 mx-auto rounded-full mb-8"></div>
			<p class="text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto">
				Here are some of the projects I've worked on. Each one represents a unique challenge 
				and showcases different aspects of my development skills.
			</p>
		</div>

		<!-- Category Filter -->
		<div class="flex flex-wrap justify-center gap-4 mb-12 animate-fade-in-up animation-delay-200">
			{categories.map((category) => (
				<button 
					class="px-6 py-2 rounded-full border-2 border-blue-600 text-blue-600 dark:text-blue-400 dark:border-blue-400 hover:bg-blue-600 hover:text-white dark:hover:bg-blue-400 dark:hover:text-white transition-all duration-300 hover:scale-105"
					data-category={category}
				>
					{category}
				</button>
			))}
		</div>

		<!-- Projects Grid -->
		<div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
			{projects.map((project, index) => (
				<div 
					class="bg-white dark:bg-slate-800 rounded-2xl shadow-lg overflow-hidden hover:shadow-xl transition-all duration-500 hover:scale-105 animate-fade-in-up"
					style={`animation-delay: ${(index + 1) * 0.1}s`}
					data-category={project.category}
				>
					<!-- Project Image -->
					<div class="relative h-48 bg-gradient-to-br from-blue-100 to-purple-100 dark:from-blue-900/20 dark:to-purple-900/20 flex items-center justify-center">
						<div class="text-6xl text-gray-400 dark:text-gray-500">ðŸ“±</div>
						<div class="absolute top-4 right-4">
							<span class="bg-blue-600 dark:bg-blue-500 text-white px-3 py-1 rounded-full text-sm font-medium">
								{project.category}
							</span>
						</div>
					</div>

					<!-- Project Content -->
					<div class="p-6">
						<h3 class="text-xl font-bold text-gray-900 dark:text-white mb-3">{project.title}</h3>
						<p class="text-gray-600 dark:text-gray-300 mb-4 leading-relaxed">{project.description}</p>
						
						<!-- Technologies -->
						<div class="flex flex-wrap gap-2 mb-6">
							{project.technologies.map((tech) => (
								<span class="bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 px-3 py-1 rounded-full text-sm">
									{tech}
								</span>
							))}
						</div>

						<!-- Project Links -->
						<div class="flex gap-3">
							<a 
								href={project.liveUrl}
								class="flex-1 bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white text-center py-2 px-4 rounded-lg font-medium transition-colors duration-300"
							>
								Live Demo
							</a>
							<a 
								href={project.githubUrl}
								class="flex-1 border-2 border-gray-300 dark:border-gray-600 hover:border-blue-600 dark:hover:border-blue-400 text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400 text-center py-2 px-4 rounded-lg font-medium transition-all duration-300"
							>
								GitHub
							</a>
						</div>
					</div>
				</div>
			))}
		</div>

		<!-- Call to Action -->
		<div class="text-center mt-16 animate-fade-in-up animation-delay-800">
			<p class="text-gray-600 dark:text-gray-400 mb-6">Interested in working together?</p>
			<a 
				href="/contact" 
				class="bg-blue-600 hover:bg-blue-700 dark:bg-blue-500 dark:hover:bg-blue-600 text-white px-8 py-3 rounded-lg font-medium transition-all duration-300 hover:scale-105 hover:shadow-lg"
			>
				Let's Talk
			</a>
		</div>
	</div>
</section>

<style>
	.animate-fade-in-up {
		animation: fadeInUp 0.8s ease-out forwards;
		opacity: 0;
		transform: translateY(30px);
	}

	.animation-delay-200 {
		animation-delay: 0.2s;
	}

	.animation-delay-800 {
		animation-delay: 0.8s;
	}

	@keyframes fadeInUp {
		to {
			opacity: 1;
			transform: translateY(0);
		}
	}

	/* Hover effects for project cards */
	.project-card:hover {
		transform: translateY(-10px);
	}
</style>

<script>
	// Simple category filtering functionality
	document.addEventListener('DOMContentLoaded', function() {
		const filterButtons = document.querySelectorAll('[data-category]');
		const projectCards = document.querySelectorAll('[data-category]');

		filterButtons.forEach((button) => {
			button.addEventListener('click', () => {
				const category = button.getAttribute('data-category');
				
				// Update active button
				filterButtons.forEach((btn) => {
					btn.classList.remove('bg-blue-600', 'text-white');
					btn.classList.add('border-blue-600', 'text-blue-600');
				});
				button.classList.remove('border-blue-600', 'text-blue-600');
				button.classList.add('bg-blue-600', 'text-white');

				// Filter projects
				projectCards.forEach((card) => {
					if (category === 'All' || card.getAttribute('data-category') === category) {
						(card as HTMLElement).style.display = 'block';
						(card as HTMLElement).style.animation = 'fadeInUp 0.5s ease-out forwards';
					} else {
						(card as HTMLElement).style.display = 'none';
					}
				});
			});
		});
	});
</script> 